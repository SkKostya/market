@use 'sass:string';

@mixin define-color-rgb($color, $r, $g, $b) {
  #{$color}: string.unquote('rgb(#{$r}, #{$g}, #{$b})');
  #{$color}-rgb: string.unquote('#{$r}, #{$g}, #{$b}');
}

@function str-replace($str, $search, $replace: '') {
  $index: string.index($str, $search);

  @if $index {
    /* stylelint-disable-next-line scss/operator-no-newline-after */
    @return str-slice($str, 1, $index - 1) + $replace +
      str-replace(
        str-slice($str, $index + str-length($search)),
        $search,
        $replace
      );
  }

  @return $str;
}

@function alpha($color, $opacity) {
  $color: str-replace($color, 'var(');
  $color: str-replace($color, ')');
  $color-rgb: var(#{$color + '-rgb'});

  @return rgba($color-rgb, $opacity);
}

html[data-theme='light'] {
  @include define-color-rgb(--neutral-color, 255, 255, 255); // #ffffff
  @include define-color-rgb(--reversed-neutral-color, 0, 0, 0); // #000000
  @include define-color-rgb(--main-color, 50, 54, 57); // #323639
  @include define-color-rgb(--secondary-color, 130, 130, 130); // #828282
  @include define-color-rgb(--secondary-light-color, 168, 166, 166); // #a8a6a6
  @include define-color-rgb(--primary-color, 3, 155, 229); // #039be5
  @include define-color-rgb(--success-color, 18, 199, 140); // #12c78c
  @include define-color-rgb(--error-color, 244, 31, 69); // #f41f45
  @include define-color-rgb(--warning-color, 242, 153, 74); // #f2994a
  @include define-color-rgb(--disabled-color, 204, 204, 204); // #cccccc
  @include define-color-rgb(--border, 229, 229, 229); // #e5e5e5
  @include define-color-rgb(--main-background, 249, 249, 249); // #f9f9f9
  @include define-color-rgb(--secondary-background, 245, 245, 245); // #f5f5f5
  @include define-color-rgb(--light-background, 255, 255, 255); // #ffffff
  @include define-color-rgb(
    --darken-light-background,
    255,
    255,
    255
  ); // #ffffff

  @include define-color-rgb(--dark-background, 50, 54, 57); // #323639
  @include define-color-rgb(--light-gray-background, 236, 242, 245); // #ecf2f5
  @include define-color-rgb(--input-background, 249, 249, 249); // #f9f9f9
  @include define-color-rgb(--input-white, 255, 255, 255); // #ffffff
}

html[data-theme='dark'] {
  @include define-color-rgb(--neutral-color, 0, 0, 0); // #000000
  @include define-color-rgb(--reversed-neutral-color, 255, 255, 255); // #ffffff
  @include define-color-rgb(--main-color, 225, 225, 225); // #e1e1e1
  @include define-color-rgb(--secondary-color, 180, 180, 180); // #b4b4b4
  @include define-color-rgb(--secondary-light-color, 168, 166, 166); // #a8a6a6
  @include define-color-rgb(--primary-color, 3, 136, 203); // #0388cb
  @include define-color-rgb(--success-color, 18, 199, 140); // #12c78c
  @include define-color-rgb(--error-color, 244, 31, 69); // #f41f45
  @include define-color-rgb(--warning-color, 242, 153, 74); // #f2994a
  @include define-color-rgb(--disabled-color, 160, 160, 160); // #a0a0a0
  @include define-color-rgb(--border, 120, 120, 120); // #787878
  @include define-color-rgb(--main-background, 24, 24, 24); // #181818
  @include define-color-rgb(--secondary-background, 100, 100, 100); // #646464
  @include define-color-rgb(--light-background, 44, 44, 44); // #2c2c2c
  @include define-color-rgb(--darken-light-background, 36, 36, 36); // #242424
  @include define-color-rgb(--dark-background, 180, 180, 180); // #646464
  @include define-color-rgb(--light-gray-background, 140, 144, 146); // #8c9092
  @include define-color-rgb(--input-background, 24, 24, 24); // #181818
  @include define-color-rgb(--input-white, 44, 44, 44); // #2c2c2c
}

// Media Queries Values
$mobile-sm: 320px; // mobile
$mobile-md: 380px;
$mobile-lg: 480px;
$tablet-sm: 560px; // tablet
$tablet-md: 640px;
$tablet-lg: 764px;
$laptop-sm: 860px; // laptop
$laptop-md: 940px;
$laptop-lg: 1000px;
$screen-sm: 1140px; // screen
$screen-md: 1260px;
$screen-lg: 1380px;
